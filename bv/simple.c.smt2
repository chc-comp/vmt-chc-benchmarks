;; translated from ./bv/simple.c.vmt
;; original benchmark available at: https://es-static.fbk.eu/people/griggio/ic3ia/index.html
;; author: Alberto Griggio <griggio@fbk.eu>
(set-logic HORN)
(declare-fun state (Bool Bool Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((|n__3$main.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|x__1$main| (_ BitVec 32)) (|x__1$main.next| (_ BitVec 32)) (|__NONDET_INLINE_INIT__4__3$main#0| (_ BitVec 32)) (|.PC.2| Bool) (|.PC.1| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool) (|.PC.1.next| Bool) (|.PC.2.next| Bool) (|n__3$main| (_ BitVec 32))) (=> (let ((.def_15 (not .PC.2)))
(let ((.def_12 (not .PC.1)))
(let ((.def_10 (not .PC.0)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_16 (and .def_13 .def_15)))
.def_16))))) (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |x__1$main| |n__3$main|))))
(assert (forall ((|n__3$main.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|x__1$main| (_ BitVec 32)) (|x__1$main.next| (_ BitVec 32)) (|__NONDET_INLINE_INIT__4__3$main#0| (_ BitVec 32)) (|.PC.2| Bool) (|.PC.1| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool) (|.PC.1.next| Bool) (|.PC.2.next| Bool) (|n__3$main| (_ BitVec 32))) (=> (and (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |x__1$main| |n__3$main|) (let ((.def_12 (not .PC.1)))
(let ((.def_10 (not .PC.0)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_79 (and .def_13 .PC.2)))
(let ((.def_53 (not .PC.0.next)))
(let ((.def_35 (not .PC.1.next)))
(let ((.def_74 (and .def_35 .def_53)))
(let ((.def_75 (and .PC.2.next .def_74)))
(let ((.def_80 (and .def_75 .def_79)))
(let ((.def_48 (= n__3$main.next n__3$main)))
(let ((.def_30 (= __RET__$main __RET__$main.next)))
(let ((.def_72 (and .def_30 .def_48)))
(let ((.def_51 (= x__1$main.next x__1$main)))
(let ((.def_73 (and .def_51 .def_72)))
(let ((.def_76 (and .def_73 .def_75)))
(let ((.def_70 (and .def_10 .PC.1)))
(let ((.def_15 (not .PC.2)))
(let ((.def_71 (and .def_15 .def_70)))
(let ((.def_77 (and .def_71 .def_76)))
(let ((.def_45 (bvadd (_ bv4294967295 32) n__3$main)))
(let ((.def_46 (bvslt .def_45 x__1$main)))
(let ((.def_63 (not .def_46)))
(let ((.def_61 (bvadd (_ bv1 32) x__1$main)))
(let ((.def_62 (= x__1$main.next .def_61)))
(let ((.def_64 (and .def_62 .def_63)))
(let ((.def_65 (and .def_48 .def_64)))
(let ((.def_66 (and .def_30 .def_65)))
(let ((.def_37 (and .def_35 .PC.0.next)))
(let ((.def_33 (not .PC.2.next)))
(let ((.def_38 (and .def_33 .def_37)))
(let ((.def_67 (and .def_38 .def_66)))
(let ((.def_57 (and .PC.0 .def_12)))
(let ((.def_58 (and .def_15 .def_57)))
(let ((.def_68 (and .def_58 .def_67)))
(let ((.def_54 (and .PC.1.next .def_53)))
(let ((.def_55 (and .def_33 .def_54)))
(let ((.def_43 (bvslt n__3$main x__1$main)))
(let ((.def_47 (and .def_43 .def_46)))
(let ((.def_49 (and .def_47 .def_48)))
(let ((.def_50 (and .def_30 .def_49)))
(let ((.def_52 (and .def_50 .def_51)))
(let ((.def_56 (and .def_52 .def_55)))
(let ((.def_59 (and .def_56 .def_58)))
(let ((.def_25 (bvslt n__3$main.next (_ bv1 32))))
(let ((.def_26 (not .def_25)))
(let ((.def_22 (= x__1$main.next (_ bv0 32))))
(let ((.def_19 (= n__3$main.next |__NONDET_INLINE_INIT__4__3$main#0|)))
(let ((.def_23 (and .def_19 .def_22)))
(let ((.def_27 (and .def_23 .def_26)))
(let ((.def_31 (and .def_27 .def_30)))
(let ((.def_39 (and .def_31 .def_38)))
(let ((.def_16 (and .def_13 .def_15)))
(let ((.def_40 (and .def_16 .def_39)))
(let ((.def_60 (or .def_40 .def_59)))
(let ((.def_69 (or .def_60 .def_68)))
(let ((.def_78 (or .def_69 .def_77)))
(let ((.def_81 (or .def_78 .def_80)))
.def_81)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (state |.PC.0.next| |.PC.1.next| |.PC.2.next| |__RET__$main.next| |x__1$main.next| |n__3$main.next|))))
(assert (forall ((|n__3$main.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|x__1$main| (_ BitVec 32)) (|x__1$main.next| (_ BitVec 32)) (|__NONDET_INLINE_INIT__4__3$main#0| (_ BitVec 32)) (|.PC.2| Bool) (|.PC.1| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool) (|.PC.1.next| Bool) (|.PC.2.next| Bool) (|n__3$main| (_ BitVec 32))) (=> (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |x__1$main| |n__3$main|) (let ((.def_12 (not .PC.1)))
(let ((.def_10 (not .PC.0)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_79 (and .def_13 .PC.2)))
(let ((.def_82 (not .def_79)))
.def_82))))))))
(check-sat)
