;; translated from ./bv/sendmail-mime-fromqp.c.vmt
;; original benchmark available at: https://es-static.fbk.eu/people/griggio/ic3ia/index.html
;; author: Alberto Griggio <griggio@fbk.eu>
(set-logic HORN)
(declare-fun state (Bool Bool Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((|out__6$main.next| (_ BitVec 32)) (|outfilelen__2$main| (_ BitVec 32)) (|outfilelen__2$main.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|__NONDET_INLINE_INIT__3__5$main#1| (_ BitVec 32)) (|__NONDET_INLINE_INIT__3__5$main#0| (_ BitVec 32)) (|.PC.1| Bool) (|.PC.2| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool) (|.PC.1.next| Bool) (|.PC.2.next| Bool) (|out__6$main| (_ BitVec 32))) (=> (let ((.def_15 (not .PC.2)))
(let ((.def_12 (not .PC.1)))
(let ((.def_10 (not .PC.0)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_16 (and .def_13 .def_15)))
.def_16))))) (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |outfilelen__2$main| |out__6$main|))))
(assert (forall ((|out__6$main.next| (_ BitVec 32)) (|outfilelen__2$main| (_ BitVec 32)) (|outfilelen__2$main.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|__NONDET_INLINE_INIT__3__5$main#1| (_ BitVec 32)) (|__NONDET_INLINE_INIT__3__5$main#0| (_ BitVec 32)) (|.PC.1| Bool) (|.PC.2| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool) (|.PC.1.next| Bool) (|.PC.2.next| Bool) (|out__6$main| (_ BitVec 32))) (=> (and (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |outfilelen__2$main| |out__6$main|) (let ((.def_12 (not .PC.1)))
(let ((.def_10 (not .PC.0)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_75 (and .def_13 .PC.2)))
(let ((.def_52 (not .PC.0.next)))
(let ((.def_34 (not .PC.1.next)))
(let ((.def_66 (and .def_34 .def_52)))
(let ((.def_67 (and .PC.2.next .def_66)))
(let ((.def_76 (and .def_67 .def_75)))
(let ((.def_71 (and .PC.0 .def_12)))
(let ((.def_15 (not .PC.2)))
(let ((.def_72 (and .def_15 .def_71)))
(let ((.def_63 (= out__6$main.next out__6$main)))
(let ((.def_61 (= outfilelen__2$main.next outfilelen__2$main)))
(let ((.def_64 (and .def_61 .def_63)))
(let ((.def_31 (= __RET__$main __RET__$main.next)))
(let ((.def_65 (and .def_31 .def_64)))
(let ((.def_68 (and .def_65 .def_67)))
(let ((.def_73 (and .def_68 .def_72)))
(let ((.def_58 (and .def_10 .PC.1)))
(let ((.def_59 (and .def_15 .def_58)))
(let ((.def_69 (and .def_59 .def_68)))
(let ((.def_53 (and .PC.1.next .def_52)))
(let ((.def_38 (not .PC.2.next)))
(let ((.def_54 (and .def_38 .def_53)))
(let ((.def_26 ((_ extract 31 31) out__6$main.next)))
(let ((.def_27 (= .def_26 (_ bv1 1))))
(let ((.def_48 (not .def_27)))
(let ((.def_45 (= outfilelen__2$main.next |__NONDET_INLINE_INIT__3__5$main#1|)))
(let ((.def_22 (= out__6$main.next (_ bv0 32))))
(let ((.def_46 (and .def_22 .def_45)))
(let ((.def_24 (bvslt (_ bv0 32) outfilelen__2$main.next)))
(let ((.def_47 (and .def_24 .def_46)))
(let ((.def_49 (and .def_47 .def_48)))
(let ((.def_42 (bvslt out__6$main.next outfilelen__2$main.next)))
(let ((.def_43 (not .def_42)))
(let ((.def_50 (and .def_43 .def_49)))
(let ((.def_51 (and .def_31 .def_50)))
(let ((.def_55 (and .def_51 .def_54)))
(let ((.def_16 (and .def_13 .def_15)))
(let ((.def_56 (and .def_16 .def_55)))
(let ((.def_36 (and .def_34 .PC.0.next)))
(let ((.def_39 (and .def_36 .def_38)))
(let ((.def_19 (= outfilelen__2$main.next |__NONDET_INLINE_INIT__3__5$main#0|)))
(let ((.def_23 (and .def_19 .def_22)))
(let ((.def_25 (and .def_23 .def_24)))
(let ((.def_28 (and .def_25 .def_27)))
(let ((.def_32 (and .def_28 .def_31)))
(let ((.def_40 (and .def_32 .def_39)))
(let ((.def_41 (and .def_16 .def_40)))
(let ((.def_57 (or .def_41 .def_56)))
(let ((.def_70 (or .def_57 .def_69)))
(let ((.def_74 (or .def_70 .def_73)))
(let ((.def_77 (or .def_74 .def_76)))
.def_77))))))))))))))))))))))))))))))))))))))))))))))))))))))) (state |.PC.0.next| |.PC.1.next| |.PC.2.next| |__RET__$main.next| |outfilelen__2$main.next| |out__6$main.next|))))
(assert (forall ((|out__6$main.next| (_ BitVec 32)) (|outfilelen__2$main| (_ BitVec 32)) (|outfilelen__2$main.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|__NONDET_INLINE_INIT__3__5$main#1| (_ BitVec 32)) (|__NONDET_INLINE_INIT__3__5$main#0| (_ BitVec 32)) (|.PC.1| Bool) (|.PC.2| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool) (|.PC.1.next| Bool) (|.PC.2.next| Bool) (|out__6$main| (_ BitVec 32))) (=> (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |outfilelen__2$main| |out__6$main|) (let ((.def_12 (not .PC.1)))
(let ((.def_10 (not .PC.0)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_75 (and .def_13 .PC.2)))
(let ((.def_78 (not .def_75)))
.def_78))))))))
(check-sat)
