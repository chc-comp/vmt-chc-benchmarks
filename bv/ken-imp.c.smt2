;; translated from ./bv/ken-imp.c.vmt
;; original benchmark available at: https://es-static.fbk.eu/people/griggio/ic3ia/index.html
;; author: Alberto Griggio <griggio@fbk.eu>
(set-logic HORN)
(declare-fun state (Bool Bool Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((|j__3$main| (_ BitVec 32)) (|j__3$main.next| (_ BitVec 32)) (|y__7$main| (_ BitVec 32)) (|y__7$main.next| (_ BitVec 32)) (|x__5$main| (_ BitVec 32)) (|x__5$main.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|i__1$main| (_ BitVec 32)) (|i__1$main.next| (_ BitVec 32)) (|.PC.0.next| Bool) (|.PC.1.next| Bool) (|.PC.2.next| Bool) (|__NONDET_INLINE_INIT__4__5$main#1| (_ BitVec 32)) (|__NONDET_INLINE_INIT__2__4$main#0| (_ BitVec 32)) (|.PC.2| Bool) (|.PC.1| Bool) (|.PC.0| Bool)) (=> (let ((.def_15 (not .PC.2)))
(let ((.def_12 (not .PC.1)))
(let ((.def_10 (not .PC.0)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_16 (and .def_13 .def_15)))
.def_16))))) (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |i__1$main| |x__5$main| |y__7$main| |j__3$main|))))
(assert (forall ((|j__3$main| (_ BitVec 32)) (|j__3$main.next| (_ BitVec 32)) (|y__7$main| (_ BitVec 32)) (|y__7$main.next| (_ BitVec 32)) (|x__5$main| (_ BitVec 32)) (|x__5$main.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|i__1$main| (_ BitVec 32)) (|i__1$main.next| (_ BitVec 32)) (|.PC.0.next| Bool) (|.PC.1.next| Bool) (|.PC.2.next| Bool) (|__NONDET_INLINE_INIT__4__5$main#1| (_ BitVec 32)) (|__NONDET_INLINE_INIT__2__4$main#0| (_ BitVec 32)) (|.PC.2| Bool) (|.PC.1| Bool) (|.PC.0| Bool)) (=> (and (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |i__1$main| |x__5$main| |y__7$main| |j__3$main|) (let ((.def_60 (= j__3$main.next j__3$main)))
(let ((.def_56 (bvadd (_ bv4294967295 32) y__7$main)))
(let ((.def_57 (= y__7$main.next .def_56)))
(let ((.def_52 (= x__5$main (_ bv0 32))))
(let ((.def_53 (not .def_52)))
(let ((.def_49 (bvadd (_ bv4294967295 32) x__5$main)))
(let ((.def_50 (= x__5$main.next .def_49)))
(let ((.def_54 (and .def_50 .def_53)))
(let ((.def_58 (and .def_54 .def_57)))
(let ((.def_61 (and .def_58 .def_60)))
(let ((.def_32 (= __RET__$main __RET__$main.next)))
(let ((.def_62 (and .def_32 .def_61)))
(let ((.def_46 (= i__1$main.next i__1$main)))
(let ((.def_63 (and .def_46 .def_62)))
(let ((.def_37 (not .PC.1.next)))
(let ((.def_39 (and .def_37 .PC.0.next)))
(let ((.def_35 (not .PC.2.next)))
(let ((.def_40 (and .def_35 .def_39)))
(let ((.def_64 (and .def_40 .def_63)))
(let ((.def_12 (not .PC.1)))
(let ((.def_43 (and .PC.0 .def_12)))
(let ((.def_15 (not .PC.2)))
(let ((.def_44 (and .def_15 .def_43)))
(let ((.def_65 (and .def_44 .def_64)))
(let ((.def_28 (= j__3$main.next y__7$main.next)))
(let ((.def_25 (= i__1$main.next x__5$main.next)))
(let ((.def_22 (= j__3$main.next |__NONDET_INLINE_INIT__4__5$main#1|)))
(let ((.def_19 (= i__1$main.next |__NONDET_INLINE_INIT__2__4$main#0|)))
(let ((.def_23 (and .def_19 .def_22)))
(let ((.def_26 (and .def_23 .def_25)))
(let ((.def_29 (and .def_26 .def_28)))
(let ((.def_33 (and .def_29 .def_32)))
(let ((.def_41 (and .def_33 .def_40)))
(let ((.def_10 (not .PC.0)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_16 (and .def_13 .def_15)))
(let ((.def_42 (and .def_16 .def_41)))
(let ((.def_66 (or .def_42 .def_65)))
.def_66))))))))))))))))))))))))))))))))))))))) (state |.PC.0.next| |.PC.1.next| |.PC.2.next| |__RET__$main.next| |i__1$main.next| |x__5$main.next| |y__7$main.next| |j__3$main.next|))))
(assert (forall ((|j__3$main| (_ BitVec 32)) (|j__3$main.next| (_ BitVec 32)) (|y__7$main| (_ BitVec 32)) (|y__7$main.next| (_ BitVec 32)) (|x__5$main| (_ BitVec 32)) (|x__5$main.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|i__1$main| (_ BitVec 32)) (|i__1$main.next| (_ BitVec 32)) (|.PC.0.next| Bool) (|.PC.1.next| Bool) (|.PC.2.next| Bool) (|__NONDET_INLINE_INIT__4__5$main#1| (_ BitVec 32)) (|__NONDET_INLINE_INIT__2__4$main#0| (_ BitVec 32)) (|.PC.2| Bool) (|.PC.1| Bool) (|.PC.0| Bool)) (=> (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |i__1$main| |x__5$main| |y__7$main| |j__3$main|) (let ((.def_67 (and .PC.0 .PC.1)))
(let ((.def_15 (not .PC.2)))
(let ((.def_68 (and .def_15 .def_67)))
(let ((.def_69 (not .def_68)))
.def_69)))))))
(check-sat)
