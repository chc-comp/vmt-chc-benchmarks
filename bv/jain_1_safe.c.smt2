;; translated from ./bv/jain_1_safe.c.vmt
;; original benchmark available at: https://es-static.fbk.eu/people/griggio/ic3ia/index.html
;; author: Alberto Griggio <griggio@fbk.eu>
(set-logic HORN)
(declare-fun state (Bool Bool Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((|y__1$main.next| (_ BitVec 32)) (|cond__4$main.next| (_ BitVec 32)) (|cond__4$main| (_ BitVec 32)) (|__TEMP__2$main.next| (_ BitVec 32)) (|__TEMP__2$main| (_ BitVec 32)) (|__VERIFIER_nondet_int| (_ BitVec 32)) (|.PC.1| Bool) (|.PC.2| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool) (|.PC.1.next| Bool) (|.PC.2.next| Bool) (|y__1$main| (_ BitVec 32))) (=> (let ((.def_15 (not .PC.2)))
(let ((.def_12 (not .PC.1)))
(let ((.def_10 (not .PC.0)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_16 (and .def_13 .def_15)))
.def_16))))) (state |.PC.0| |.PC.1| |.PC.2| |cond__4$main| |__TEMP__2$main| |y__1$main|))))
(assert (forall ((|y__1$main.next| (_ BitVec 32)) (|cond__4$main.next| (_ BitVec 32)) (|cond__4$main| (_ BitVec 32)) (|__TEMP__2$main.next| (_ BitVec 32)) (|__TEMP__2$main| (_ BitVec 32)) (|__VERIFIER_nondet_int| (_ BitVec 32)) (|.PC.1| Bool) (|.PC.2| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool) (|.PC.1.next| Bool) (|.PC.2.next| Bool) (|y__1$main| (_ BitVec 32))) (=> (and (state |.PC.0| |.PC.1| |.PC.2| |cond__4$main| |__TEMP__2$main| |y__1$main|) (let ((.def_78 (and .PC.0 .PC.1)))
(let ((.def_15 (not .PC.2)))
(let ((.def_79 (and .def_15 .def_78)))
(let ((.def_73 (and .PC.1.next .PC.0.next)))
(let ((.def_33 (not .PC.2.next)))
(let ((.def_74 (and .def_33 .def_73)))
(let ((.def_80 (and .def_74 .def_79)))
(let ((.def_70 (= y__1$main.next y__1$main)))
(let ((.def_22 (= cond__4$main cond__4$main.next)))
(let ((.def_71 (and .def_22 .def_70)))
(let ((.def_26 (= __TEMP__2$main __TEMP__2$main.next)))
(let ((.def_72 (and .def_26 .def_71)))
(let ((.def_75 (and .def_72 .def_74)))
(let ((.def_10 (not .PC.0)))
(let ((.def_68 (and .def_10 .PC.1)))
(let ((.def_69 (and .def_15 .def_68)))
(let ((.def_76 (and .def_69 .def_75)))
(let ((.def_49 (= cond__4$main.next (_ bv0 32))))
(let ((.def_50 (not .def_49)))
(let ((.def_47 (= y__1$main.next (_ bv0 32))))
(let ((.def_51 (and .def_47 .def_50)))
(let ((.def_52 (not .def_51)))
(let ((.def_45 (= cond__4$main.next (_ bv1 32))))
(let ((.def_48 (or .def_45 .def_47)))
(let ((.def_53 (and .def_48 .def_52)))
(let ((.def_39 (bvshl __TEMP__2$main.next (_ bv1 32))))
(let ((.def_42 (bvadd .def_39 y__1$main)))
(let ((.def_43 (= y__1$main.next .def_42)))
(let ((.def_38 (= __TEMP__2$main.next __VERIFIER_nondet_int)))
(let ((.def_44 (and .def_38 .def_43)))
(let ((.def_54 (and .def_44 .def_53)))
(let ((.def_64 (and .def_50 .def_54)))
(let ((.def_29 (not .PC.1.next)))
(let ((.def_31 (and .def_29 .PC.0.next)))
(let ((.def_34 (and .def_31 .def_33)))
(let ((.def_65 (and .def_34 .def_64)))
(let ((.def_12 (not .PC.1)))
(let ((.def_60 (and .PC.0 .def_12)))
(let ((.def_61 (and .def_15 .def_60)))
(let ((.def_66 (and .def_61 .def_65)))
(let ((.def_56 (not .PC.0.next)))
(let ((.def_57 (and .PC.1.next .def_56)))
(let ((.def_58 (and .def_33 .def_57)))
(let ((.def_55 (and .def_49 .def_54)))
(let ((.def_59 (and .def_55 .def_58)))
(let ((.def_62 (and .def_59 .def_61)))
(let ((.def_19 (= y__1$main.next (_ bv1 32))))
(let ((.def_23 (and .def_19 .def_22)))
(let ((.def_27 (and .def_23 .def_26)))
(let ((.def_35 (and .def_27 .def_34)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_16 (and .def_13 .def_15)))
(let ((.def_36 (and .def_16 .def_35)))
(let ((.def_63 (or .def_36 .def_62)))
(let ((.def_67 (or .def_63 .def_66)))
(let ((.def_77 (or .def_67 .def_76)))
(let ((.def_81 (or .def_77 .def_80)))
.def_81)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (state |.PC.0.next| |.PC.1.next| |.PC.2.next| |cond__4$main.next| |__TEMP__2$main.next| |y__1$main.next|))))
(assert (forall ((|y__1$main.next| (_ BitVec 32)) (|cond__4$main.next| (_ BitVec 32)) (|cond__4$main| (_ BitVec 32)) (|__TEMP__2$main.next| (_ BitVec 32)) (|__TEMP__2$main| (_ BitVec 32)) (|__VERIFIER_nondet_int| (_ BitVec 32)) (|.PC.1| Bool) (|.PC.2| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool) (|.PC.1.next| Bool) (|.PC.2.next| Bool) (|y__1$main| (_ BitVec 32))) (=> (state |.PC.0| |.PC.1| |.PC.2| |cond__4$main| |__TEMP__2$main| |y__1$main|) (let ((.def_78 (and .PC.0 .PC.1)))
(let ((.def_15 (not .PC.2)))
(let ((.def_79 (and .def_15 .def_78)))
(let ((.def_82 (not .def_79)))
.def_82)))))))
(check-sat)
