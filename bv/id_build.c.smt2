;; translated from ./bv/id_build.c.vmt
;; original benchmark available at: https://es-static.fbk.eu/people/griggio/ic3ia/index.html
;; author: Alberto Griggio <griggio@fbk.eu>
(set-logic HORN)
(declare-fun state (Bool Bool Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((|.PC.2.next| Bool) (|i__3$main| (_ BitVec 32)) (|i__3$main.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|j__5$main.next| (_ BitVec 32)) (|j__5$main| (_ BitVec 32)) (|nlen__1$main| (_ BitVec 32)) (|nlen__1$main.next| (_ BitVec 32)) (|__NONDET_INLINE_INIT__2__3$main#0| (_ BitVec 32)) (|.PC.2| Bool) (|.PC.1| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool) (|.PC.1.next| Bool)) (=> (let ((.def_15 (not .PC.2)))
(let ((.def_12 (not .PC.1)))
(let ((.def_10 (not .PC.0)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_16 (and .def_13 .def_15)))
.def_16))))) (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |j__5$main| |nlen__1$main| |i__3$main|))))
(assert (forall ((|.PC.2.next| Bool) (|i__3$main| (_ BitVec 32)) (|i__3$main.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|j__5$main.next| (_ BitVec 32)) (|j__5$main| (_ BitVec 32)) (|nlen__1$main| (_ BitVec 32)) (|nlen__1$main.next| (_ BitVec 32)) (|__NONDET_INLINE_INIT__2__3$main#0| (_ BitVec 32)) (|.PC.2| Bool) (|.PC.1| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool) (|.PC.1.next| Bool)) (=> (and (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |j__5$main| |nlen__1$main| |i__3$main|) (let ((.def_10 (not .PC.0)))
(let ((.def_125 (and .def_10 .PC.1)))
(let ((.def_126 (and .PC.2 .def_125)))
(let ((.def_84 (not .PC.0.next)))
(let ((.def_117 (and .PC.1.next .def_84)))
(let ((.def_118 (and .PC.2.next .def_117)))
(let ((.def_127 (and .def_118 .def_126)))
(let ((.def_12 (not .PC.1)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_122 (and .def_13 .PC.2)))
(let ((.def_48 (= i__3$main.next i__3$main)))
(let ((.def_26 (= __RET__$main __RET__$main.next)))
(let ((.def_114 (and .def_26 .def_48)))
(let ((.def_30 (= j__5$main j__5$main.next)))
(let ((.def_115 (and .def_30 .def_114)))
(let ((.def_51 (= nlen__1$main.next nlen__1$main)))
(let ((.def_116 (and .def_51 .def_115)))
(let ((.def_119 (and .def_116 .def_118)))
(let ((.def_123 (and .def_119 .def_122)))
(let ((.def_41 (and .PC.0 .def_12)))
(let ((.def_113 (and .PC.2 .def_41)))
(let ((.def_120 (and .def_113 .def_119)))
(let ((.def_104 (bvadd (_ bv1 32) j__5$main)))
(let ((.def_105 (= j__5$main.next .def_104)))
(let ((.def_73 (bvneg i__3$main)))
(let ((.def_74 (bvadd nlen__1$main .def_73)))
(let ((.def_76 (bvadd (_ bv4294967295 32) .def_74)))
(let ((.def_77 ((_ extract 31 31) .def_76)))
(let ((.def_78 (= .def_77 (_ bv1 1))))
(let ((.def_92 (not .def_78)))
(let ((.def_59 (bvslt j__5$main (_ bv8 32))))
(let ((.def_93 (and .def_59 .def_92)))
(let ((.def_90 (bvslt .def_76 nlen__1$main)))
(let ((.def_103 (and .def_90 .def_93)))
(let ((.def_106 (and .def_103 .def_105)))
(let ((.def_107 (and .def_48 .def_106)))
(let ((.def_108 (and .def_26 .def_107)))
(let ((.def_109 (and .def_51 .def_108)))
(let ((.def_53 (and .PC.1.next .PC.0.next)))
(let ((.def_37 (not .PC.2.next)))
(let ((.def_54 (and .def_37 .def_53)))
(let ((.def_110 (and .def_54 .def_109)))
(let ((.def_69 (and .PC.0 .PC.1)))
(let ((.def_15 (not .PC.2)))
(let ((.def_70 (and .def_15 .def_69)))
(let ((.def_111 (and .def_70 .def_110)))
(let ((.def_33 (not .PC.1.next)))
(let ((.def_35 (and .def_33 .PC.0.next)))
(let ((.def_99 (and .def_35 .PC.2.next)))
(let ((.def_91 (not .def_90)))
(let ((.def_94 (and .def_91 .def_93)))
(let ((.def_95 (and .def_48 .def_94)))
(let ((.def_96 (and .def_26 .def_95)))
(let ((.def_97 (and .def_30 .def_96)))
(let ((.def_98 (and .def_51 .def_97)))
(let ((.def_100 (and .def_98 .def_99)))
(let ((.def_101 (and .def_70 .def_100)))
(let ((.def_85 (and .def_33 .def_84)))
(let ((.def_86 (and .PC.2.next .def_85)))
(let ((.def_79 (and .def_59 .def_78)))
(let ((.def_80 (and .def_48 .def_79)))
(let ((.def_81 (and .def_26 .def_80)))
(let ((.def_82 (and .def_30 .def_81)))
(let ((.def_83 (and .def_51 .def_82)))
(let ((.def_87 (and .def_83 .def_86)))
(let ((.def_88 (and .def_70 .def_87)))
(let ((.def_62 (bvadd (_ bv1 32) i__3$main)))
(let ((.def_63 (= i__3$main.next .def_62)))
(let ((.def_60 (not .def_59)))
(let ((.def_64 (and .def_60 .def_63)))
(let ((.def_65 (and .def_26 .def_64)))
(let ((.def_66 (and .def_30 .def_65)))
(let ((.def_67 (and .def_51 .def_66)))
(let ((.def_38 (and .def_35 .def_37)))
(let ((.def_68 (and .def_38 .def_67)))
(let ((.def_71 (and .def_68 .def_70)))
(let ((.def_46 (= j__5$main.next (_ bv0 32))))
(let ((.def_45 (bvslt i__3$main nlen__1$main)))
(let ((.def_47 (and .def_45 .def_46)))
(let ((.def_49 (and .def_47 .def_48)))
(let ((.def_50 (and .def_26 .def_49)))
(let ((.def_52 (and .def_50 .def_51)))
(let ((.def_55 (and .def_52 .def_54)))
(let ((.def_42 (and .def_15 .def_41)))
(let ((.def_56 (and .def_42 .def_55)))
(let ((.def_22 (= i__3$main.next (_ bv0 32))))
(let ((.def_19 (= nlen__1$main.next |__NONDET_INLINE_INIT__2__3$main#0|)))
(let ((.def_23 (and .def_19 .def_22)))
(let ((.def_27 (and .def_23 .def_26)))
(let ((.def_31 (and .def_27 .def_30)))
(let ((.def_39 (and .def_31 .def_38)))
(let ((.def_16 (and .def_13 .def_15)))
(let ((.def_40 (and .def_16 .def_39)))
(let ((.def_57 (or .def_40 .def_56)))
(let ((.def_72 (or .def_57 .def_71)))
(let ((.def_89 (or .def_72 .def_88)))
(let ((.def_102 (or .def_89 .def_101)))
(let ((.def_112 (or .def_102 .def_111)))
(let ((.def_121 (or .def_112 .def_120)))
(let ((.def_124 (or .def_121 .def_123)))
(let ((.def_128 (or .def_124 .def_127)))
.def_128)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (state |.PC.0.next| |.PC.1.next| |.PC.2.next| |__RET__$main.next| |j__5$main.next| |nlen__1$main.next| |i__3$main.next|))))
(assert (forall ((|.PC.2.next| Bool) (|i__3$main| (_ BitVec 32)) (|i__3$main.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|j__5$main.next| (_ BitVec 32)) (|j__5$main| (_ BitVec 32)) (|nlen__1$main| (_ BitVec 32)) (|nlen__1$main.next| (_ BitVec 32)) (|__NONDET_INLINE_INIT__2__3$main#0| (_ BitVec 32)) (|.PC.2| Bool) (|.PC.1| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool) (|.PC.1.next| Bool)) (=> (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |j__5$main| |nlen__1$main| |i__3$main|) (let ((.def_10 (not .PC.0)))
(let ((.def_125 (and .def_10 .PC.1)))
(let ((.def_126 (and .PC.2 .def_125)))
(let ((.def_129 (not .def_126)))
.def_129)))))))
(check-sat)
