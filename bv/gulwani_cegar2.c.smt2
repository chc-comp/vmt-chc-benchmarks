;; translated from ./bv/gulwani_cegar2.c.vmt
;; original benchmark available at: https://es-static.fbk.eu/people/griggio/ic3ia/index.html
;; author: Alberto Griggio <griggio@fbk.eu>
(set-logic HORN)
(declare-fun state (Bool Bool Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((|.PC.1.next| Bool) (|.PC.2.next| Bool) (|__BLAST_NONDET| (_ BitVec 32)) (|__BLAST_NONDET.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|m__3$main| (_ BitVec 32)) (|m__3$main.next| (_ BitVec 32)) (|x__1$main| (_ BitVec 32)) (|x__1$main.next| (_ BitVec 32)) (|n__5$main| (_ BitVec 32)) (|n__5$main.next| (_ BitVec 32)) (|__NONDET_INLINE_INIT__6__5$main#0| (_ BitVec 32)) (|.PC.1| Bool) (|.PC.2| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool)) (=> (let ((.def_15 (not .PC.2)))
(let ((.def_12 (not .PC.1)))
(let ((.def_10 (not .PC.0)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_16 (and .def_13 .def_15)))
.def_16))))) (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |n__5$main| |x__1$main| |m__3$main| |__BLAST_NONDET|))))
(assert (forall ((|.PC.1.next| Bool) (|.PC.2.next| Bool) (|__BLAST_NONDET| (_ BitVec 32)) (|__BLAST_NONDET.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|m__3$main| (_ BitVec 32)) (|m__3$main.next| (_ BitVec 32)) (|x__1$main| (_ BitVec 32)) (|x__1$main.next| (_ BitVec 32)) (|n__5$main| (_ BitVec 32)) (|n__5$main.next| (_ BitVec 32)) (|__NONDET_INLINE_INIT__6__5$main#0| (_ BitVec 32)) (|.PC.1| Bool) (|.PC.2| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool)) (=> (and (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |n__5$main| |x__1$main| |m__3$main| |__BLAST_NONDET|) (let ((.def_12 (not .PC.1)))
(let ((.def_67 (and .PC.0 .def_12)))
(let ((.def_118 (and .PC.2 .def_67)))
(let ((.def_37 (not .PC.1.next)))
(let ((.def_39 (and .def_37 .PC.0.next)))
(let ((.def_110 (and .PC.2.next .def_39)))
(let ((.def_119 (and .def_110 .def_118)))
(let ((.def_10 (not .PC.0)))
(let ((.def_114 (and .def_10 .PC.1)))
(let ((.def_15 (not .PC.2)))
(let ((.def_115 (and .def_15 .def_114)))
(let ((.def_54 (= __BLAST_NONDET.next __BLAST_NONDET)))
(let ((.def_32 (= __RET__$main __RET__$main.next)))
(let ((.def_106 (and .def_32 .def_54)))
(let ((.def_57 (= m__3$main.next m__3$main)))
(let ((.def_107 (and .def_57 .def_106)))
(let ((.def_59 (= x__1$main.next x__1$main)))
(let ((.def_108 (and .def_59 .def_107)))
(let ((.def_61 (= n__5$main.next n__5$main)))
(let ((.def_109 (and .def_61 .def_108)))
(let ((.def_111 (and .def_109 .def_110)))
(let ((.def_116 (and .def_111 .def_115)))
(let ((.def_104 (and .PC.0 .PC.1)))
(let ((.def_105 (and .def_15 .def_104)))
(let ((.def_112 (and .def_105 .def_111)))
(let ((.def_95 (bvadd (_ bv1 32) x__1$main)))
(let ((.def_96 (= x__1$main.next .def_95)))
(let ((.def_87 (= __BLAST_NONDET (_ bv0 32))))
(let ((.def_45 (bvslt x__1$main n__5$main)))
(let ((.def_91 (and .def_45 .def_87)))
(let ((.def_92 (and .def_57 .def_91)))
(let ((.def_88 (not .def_87)))
(let ((.def_89 (and .def_45 .def_88)))
(let ((.def_86 (= m__3$main.next x__1$main)))
(let ((.def_90 (and .def_86 .def_89)))
(let ((.def_93 (or .def_90 .def_92)))
(let ((.def_97 (and .def_93 .def_96)))
(let ((.def_98 (and .def_54 .def_97)))
(let ((.def_99 (and .def_32 .def_98)))
(let ((.def_100 (and .def_61 .def_99)))
(let ((.def_35 (not .PC.2.next)))
(let ((.def_40 (and .def_35 .def_39)))
(let ((.def_101 (and .def_40 .def_100)))
(let ((.def_68 (and .def_15 .def_67)))
(let ((.def_102 (and .def_68 .def_101)))
(let ((.def_81 (and .PC.1.next .PC.0.next)))
(let ((.def_82 (and .def_35 .def_81)))
(let ((.def_50 ((_ extract 31 31) m__3$main)))
(let ((.def_51 (= .def_50 (_ bv1 1))))
(let ((.def_73 (not .def_51)))
(let ((.def_47 (bvslt (_ bv0 32) n__5$main)))
(let ((.def_46 (not .def_45)))
(let ((.def_48 (and .def_46 .def_47)))
(let ((.def_74 (and .def_48 .def_73)))
(let ((.def_71 (bvslt m__3$main n__5$main)))
(let ((.def_72 (not .def_71)))
(let ((.def_75 (and .def_72 .def_74)))
(let ((.def_76 (and .def_54 .def_75)))
(let ((.def_77 (and .def_32 .def_76)))
(let ((.def_78 (and .def_57 .def_77)))
(let ((.def_79 (and .def_59 .def_78)))
(let ((.def_80 (and .def_61 .def_79)))
(let ((.def_83 (and .def_80 .def_82)))
(let ((.def_84 (and .def_68 .def_83)))
(let ((.def_63 (not .PC.0.next)))
(let ((.def_64 (and .PC.1.next .def_63)))
(let ((.def_65 (and .def_35 .def_64)))
(let ((.def_52 (and .def_48 .def_51)))
(let ((.def_55 (and .def_52 .def_54)))
(let ((.def_56 (and .def_32 .def_55)))
(let ((.def_58 (and .def_56 .def_57)))
(let ((.def_60 (and .def_58 .def_59)))
(let ((.def_62 (and .def_60 .def_61)))
(let ((.def_66 (and .def_62 .def_65)))
(let ((.def_69 (and .def_66 .def_68)))
(let ((.def_28 (= m__3$main.next (_ bv0 32))))
(let ((.def_25 (= x__1$main.next (_ bv0 32))))
(let ((.def_22 (= __BLAST_NONDET.next (_ bv0 32))))
(let ((.def_19 (= n__5$main.next |__NONDET_INLINE_INIT__6__5$main#0|)))
(let ((.def_23 (and .def_19 .def_22)))
(let ((.def_26 (and .def_23 .def_25)))
(let ((.def_29 (and .def_26 .def_28)))
(let ((.def_33 (and .def_29 .def_32)))
(let ((.def_41 (and .def_33 .def_40)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_16 (and .def_13 .def_15)))
(let ((.def_42 (and .def_16 .def_41)))
(let ((.def_70 (or .def_42 .def_69)))
(let ((.def_85 (or .def_70 .def_84)))
(let ((.def_103 (or .def_85 .def_102)))
(let ((.def_113 (or .def_103 .def_112)))
(let ((.def_117 (or .def_113 .def_116)))
(let ((.def_120 (or .def_117 .def_119)))
.def_120)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (state |.PC.0.next| |.PC.1.next| |.PC.2.next| |__RET__$main.next| |n__5$main.next| |x__1$main.next| |m__3$main.next| |__BLAST_NONDET.next|))))
(assert (forall ((|.PC.1.next| Bool) (|.PC.2.next| Bool) (|__BLAST_NONDET| (_ BitVec 32)) (|__BLAST_NONDET.next| (_ BitVec 32)) (|__RET__$main.next| (_ BitVec 32)) (|__RET__$main| (_ BitVec 32)) (|m__3$main| (_ BitVec 32)) (|m__3$main.next| (_ BitVec 32)) (|x__1$main| (_ BitVec 32)) (|x__1$main.next| (_ BitVec 32)) (|n__5$main| (_ BitVec 32)) (|n__5$main.next| (_ BitVec 32)) (|__NONDET_INLINE_INIT__6__5$main#0| (_ BitVec 32)) (|.PC.1| Bool) (|.PC.2| Bool) (|.PC.0| Bool) (|.PC.0.next| Bool)) (=> (state |.PC.0| |.PC.1| |.PC.2| |__RET__$main| |n__5$main| |x__1$main| |m__3$main| |__BLAST_NONDET|) (let ((.def_12 (not .PC.1)))
(let ((.def_67 (and .PC.0 .def_12)))
(let ((.def_118 (and .PC.2 .def_67)))
(let ((.def_121 (not .def_118)))
.def_121)))))))
(check-sat)
